package com.TestApi.start.service;

import com.TestApi.start.config.ApiConfig;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CompletableFuture;

@Service
public class PostApiService {

    private final RestTemplate restTemplate;
    private final ApiConfig apiConfig;
    private final HttpHeaders commonHeaders;

    @Autowired
    public PostApiService(RestTemplate restTemplate, ApiConfig apiConfig, HttpHeaders commonHeaders) {
        this.restTemplate = restTemplate;
        this.apiConfig = apiConfig;
        this.commonHeaders = commonHeaders;
    }

    @Async("taskExecutor")
    public CompletableFuture<List<String>> sendData(int requestID, String requestBody) {
        List<String> responseBodies = new ArrayList<>();
        List<String> urls = apiConfig.getUrls();

        for (String url : urls) {
            try {
                HttpEntity<String> entity = new HttpEntity<>(requestBody, commonHeaders);
                ResponseEntity<String> response = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
                responseBodies.add(response.getBody());
            } catch (Exception e) {
                System.out.println("Request " + requestID + " failed for URL " + url + " - " + e.getMessage());
            }
        }

        System.out.println("Request " + requestID + " completed by " + Thread.currentThread().getName());
        return CompletableFuture.completedFuture(responseBodies);
    }
}

