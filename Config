public class HelperUtils {

	public static String generateReference() {
		String uuid = UUID.randomUUID().toString().substring(0, 30);
		return uuid;
	}

	
	public static String populateHeadersValueWithDefaultValue(Map<String, String> headers, String value) {
		if (!headers.containsKey(value) || headers.get(value).isEmpty()) {
			return Constants.Others._BLANKS;
		}
		return headers.get(value);
	}

	////////////////////////////////////////////////////

	////////////////////////////////////////////////////
	// TO-DO remove
	public static boolean isEmpty(String text) {
		if (text == null || text.equals(null) || text.isEmpty() || text.isBlank()) {
			return true;
		}
		return false;
	}

	////////////////////////////////////////////////////
	// TO-DO remove
	public static boolean isEmpty(Collection<?> list) {
		return list == null || list.isEmpty();
	}



	/**
	 * @param translation
	 * @return code
	 */

	public static String checkTranslation(Translation translation) {
		if (translation != null)
			return translation.getCode();
		else
			return null;
	}

	public static String checkDescription(Translation translation) {
		if (translation != null)
			return translation.getDescription();
		else
			return null;
	}



	////////////////////////////////////////////////////

	public static RequestHeader populateRequestHeader(Map<String, String> headers) {
		RequestHeader requestHeader = new RequestHeader();

		String channelId = headers.get(MdmHeaderRequest.CHANNEL_ID);
		requestHeader.setChannelId(channelId);

		String inputCountry = headers.get(MdmHeaderRequest.INPUT_COUNTRY);
		requestHeader.setInputCountry(inputCountry);

		String transactionReference = headers.get(MdmHeaderRequest.TRANSACTION_REFERENCE);
		requestHeader.setTransactionReference(transactionReference);

		String inputTimestamp = headers.get(MdmHeaderRequest.INPUT_TIMESTAMP);
		requestHeader.setInputTimestamp(inputTimestamp);

		String language = headers.get(MdmHeaderRequest.LANGUAGE);
		requestHeader.setLanguage(language);

		String identifierType = headers.get(MdmHeaderRequest.IDENTIFIER_TYPE);
		requestHeader.setIdentifirType(identifierType);

		String role = headers.get(MdmHeaderRequest.ROLE);
		if (role !=null && !role.isEmpty())
			requestHeader.setRole(role);

		String withCustomerId = headers.get(MdmHeaderRequest.WITH_CUSTOMER_ID);
		if (withCustomerId != null && !withCustomerId.isEmpty())
			requestHeader.setWithCustomerId(withCustomerId);


		return requestHeader;
	}

}
