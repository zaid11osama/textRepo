public BackendResponse callQueueIntegrationService(ABCustomerRequestHeader ABCustomerRequestHeader,
																	 String fixedLengthString,
																	 String correlationId) {
		ResponseEntity<BackendResponse> response;
		try {
			log.info("callQueueIntegrationService()");
			HttpHeaders headers = new HttpHeaders();
			headers.set("requestName", ABCustomerRequestHeader.getRequestName());
			headers.set("requestCountry", ABCustomerRequestHeader.getRequestCountry());
			headers.set("requestChannel", ABCustomerRequestHeader.getRequestChannel());
			headers.set("requestTimestamp", String.valueOf(ABCustomerRequestHeader.getRequestTimestamp()));
			headers.set("requestReference", ABCustomerRequestHeader.getRequestReference());
			headers.set("responseRequired", String.valueOf(ABCustomerRequestHeader.getResponseRequired()));
			headers.set("uniqueReference", ABCustomerRequestHeader.getUniqeReference());
			headers.set("authenticaiton", ABCustomerRequestHeader.getAuthentication());
			headers.set("Content-Type", "application/json");
			HttpEntity<String> entity = new HttpEntity<>(fixedLengthString, headers);
			String url = getQIntegrationBaseUrl() + "/mdm/v2/orc/integration/send-be-req";
			response = restTemplate.exchange(url, HttpMethod.POST, entity, BackendResponse.class);
			log.info("/callQueueIntegrationService({})", response.getBody());
			return response.getBody();
		}catch (HttpClientErrorException.BadRequest ex){
			throw new BadRequestException(ex.getMessage());
		}

	}
