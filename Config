@Test
void testSetPhones_withValidContact_shouldSetFieldsCorrectly() {
    try (MockedStatic<HelperUtils> mockedHelper = mockStatic(HelperUtils.class)) {
        // Arrange
        mockedHelper.when(() -> HelperUtils.checkTranslation(any()))
                .thenReturn("JO");
        mockedHelper.when(() -> HelperUtils.checkDescription(any()))
                .thenReturn("Jordan");

        Contact contact = new Contact();
        PartyPhoneCountry phoneCountry = new PartyPhoneCountry();
        phoneCountry.setCode("JO");
        ContactPhone phone = new ContactPhone();
        phone.setNumber("0791234567");
        phone.setCountry(new Translation("JO", "Jordan", "<UNK>"));
        contact.setPhone(phone);

        PartyPhone partyPhone = new PartyPhone();
        int index = 1;
        String type = "MOBILE";

        PartyService spyClass = spy(partyService);
        doReturn("+962").when(spyClass).getDialCode(anyString());

        // Act
        spyClass.setPhones(index, contact, partyPhone, type);

        // Assert
        assertEquals(type, partyPhone.getType());
        assertEquals("0791234567", partyPhone.getNumber());
        assertNotNull(partyPhone.getCountry());
        assertEquals("+962", partyPhone.getCountry().getDialcode());
        assertEquals(index, partyPhone.getIndex());
    }
