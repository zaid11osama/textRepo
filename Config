@Primary
@Component
public class UtilityDataAccess {
	
	@Autowired
	private ConfigReader configReader; 
	
	@Autowired
	public SqlQueryReader queryReader;
	
	private Logger logger = LoggerFactory.getLogger(UtilityDataAccess.class);
	private static JdbcTemplate jdbc;
	
	private static final String WHERE = " WHERE ";
	private static final String AND = " AND ";

	////////////////////////////////////////////////////////////////////////////////
	@PostConstruct
	public void init() {
		logger.debug("connectDb()");
		boolean flag = false;
		try {
			if (getJdbc() == null) {
				flag = true;
				setJdbc(new JdbcTemplate(new DataSourceConfig().getUtilityDataSource(configReader)));
			}
		} finally {
			logger.debug("/connectDb({})", flag);
		}
	}











public DataSource getGoldenDataSource(ConfigReader configReader) {
		try {
			logger.info("getDataSource");
			Properties hikariProparties = getHikariProparties(configReader);
			HikariConfig config = new HikariConfig(hikariProparties);
			config.setDriverClassName("oracle.jdbc.OracleDriver");
			config.addDataSourceProperty("v$session.program", configReader.getAppName());
			config.setConnectionTestQuery("SELECT * FROM DUAL");
			config.setMaximumPoolSize(1);
			config.setPassword(ApiUtil.decrypt(configReader.getProperty("hikari.password"),configReader.getProperty("encryption.key")));
			return new HikariDataSource(config);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			MsUtil.throww(e);
			return null;
		} finally {
			logger.info("/getDataSource");
		}

	}




	/// ///////////////////////////////////////////////////////////////////////////////
	public DataSource getUtilityDataSource(ConfigReader configReader) {
		try {
			logger.info("getUtilityDataSource");
			HikariConfig config = new HikariConfig();
			config.setJdbcUrl(configReader.getProperty("hikari.utility.jdbcUrl"));
			config.setUsername(configReader.getProperty("hikari.utility.username"));
			config.setPassword(ApiUtil.decrypt(configReader.getProperty("hikari.utility.password"),configReader.getProperty("encryption.key")));

			config.setDriverClassName("oracle.jdbc.OracleDriver");
			config.addDataSourceProperty("", configReader.getAppName());
			config.setMaximumPoolSize(100);
			return new HikariDataSource(config);
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
			MsUtil.throww(e);
			return null;
		} finally {
			logger.info("/getUtilityDataSource");
		}

	}
