   @Test
    void shouldMapContactsToPartyPhones() {
        // given
        try (MockedStatic<HelperUtils> mockedHelper = mockStatic(HelperUtils.class)) {
        Contact residentialContact = new Contact();
        residentialContact.setType(new Translation("RSF", "Residential", "Residential"));
        residentialContact.setPhone(new ContactPhone());
        residentialContact.setUsage(1);

        Contact smsContact = new Contact();
        smsContact.setType(new Translation("SMS", "SMS", "SMS"));
        smsContact.setPhone(new ContactPhone());
        smsContact.setUsage(2);

        List<Contact> contacts = Arrays.asList(residentialContact, smsContact);


            mockedHelper.when(() -> HelperUtils.checkTranslation(any()))
                    .thenAnswer(invocation -> ((Translation) invocation.getArgument(0)).getCode());

            PartyService spyService = Mockito.spy(partyService);


            doNothing().when(spyService).setPhones(anyInt(), any(Contact.class), any(PartyPhone.class), anyString());

            // when
            Map<String, List<PartyPhone>> result = spyService.mapPhoneToPartyContact(contacts);

            // then
            assertNotNull(result);
            assertTrue(result.containsKey("residential"));
            assertTrue(result.containsKey("sms"));


        }
    }
