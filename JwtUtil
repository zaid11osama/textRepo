public static Map<String, EmailDetails> mapEmailToPartyContact(List<InternetAccount> internetAccounts,
																   PartyContact partyContact) {
		log.info("mapEmailToPartyContact()");

		EmailDetails emailsPersonal = new EmailDetails();
		EmailDetails emailsWork = new EmailDetails();
		EmailDetails emailsOther = new EmailDetails();

		Map<String, EmailDetails> emails = new HashMap<>();

		if (internetAccounts == null)
			return null;

		for (InternetAccount internetAccount : internetAccounts) {

			if (!ObjectUtils.isEmpty(internetAccount)) {

				String usage = internetAccount.getUsage();
				String type = internetAccount.getType();

				if ("EML".equalsIgnoreCase(usage)) {

					if ("RES".equalsIgnoreCase(type)) {
						emailsPersonal.setEmail(internetAccount.getHandler());
						emailsPersonal.setIsVerified(0);
					} else if ("WRK".equalsIgnoreCase(type)) {
						emailsWork.setEmail(internetAccount.getHandler());
						emailsWork.setIsVerified(0);
					} else if ("DFT".equalsIgnoreCase(type)) {
						emailsOther.setEmail(internetAccount.getHandler());
						emailsOther.setIsVerified(0);
					}
				}

				if ("WEB".equalsIgnoreCase(usage)) {
					partyContact.setWebsite(internetAccount.getHandler());
				}
			}
		}
		emails.put("personal", emailsPersonal);
		emails.put("work", emailsWork);
		emails.put("other", emailsOther);

		log.info("/mapEmailToPartyContact()");
		return emails;
	}
