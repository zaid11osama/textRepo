	public FlagsAttribute mapFlagsAttrbiuteToFlagsAndAttributes(Flag flag, Relationship relationship) {
		log.debug("mapFlagsAttrbiuteToFlagsAndAttributes()");
		int status = ObjectUtils.isEmpty(flag.getStatus()) ? flag.getStatus().equalsIgnoreCase("0") ? 0 : 1 : 0;
		FlagsAttribute flagsAttribute = FlagsAttribute.builder().globalId(relationship.getGlobalId()).isActive(status)
				.universalId(UUID.randomUUID().toString()).organization(relationship.getOrganization())
				.relationCountry(HelperUtils.checkTranslation(relationship.getRelationCountry()))
				.relationshipSequence(relationship.getRelationshipSequence()).role(relationship.getRole())
				.termsAndConditionVersion(flag.getTermsAndConditionVersion()).value(flag.getValue())
				.authorizedUser(Others.KYC).dateRecordCreated(java.sql.Date.valueOf(LocalDate.now()))
				.dateLastUpdate(java.sql.Date.valueOf(LocalDate.now())).updatedToday(1)
				.updateCountry(HelperUtils.checkTranslation(relationship.getRelationCountry()))
				.updateProgram(Others.KYC).updateUser(Others.KYC).isDeleted(0).updateSystem(Others.KYC)
				.latestUniqueRefrence(relationship.getLatestUniqueRefrence()).type(flag.get_identifier())
				.updateTimestamp(Timestamp.valueOf(LocalDateTime.now())).build();
		if (status == 0)
			flagsAttribute.setInactiveDate(flag.getStatusDate());
		else
			flagsAttribute.setActiveDate(flag.getStatusDate());

		log.debug("/mapFlagsAttrbiuteToFlagsAndAttributes()");
		return flagsAttribute;
	}
