 @Test
    void testSetPhones_withValidContact_shouldSetFieldsCorrectly() {
        // Arrange
        Contact contact = new Contact();
        PhoneCountry phoneCountry = new PhoneCountry();
        phoneCountry.setCode("JO");
        Phone phone = new Phone();
        phone.setNumber("0791234567");
        phone.setCountry(phoneCountry);
        contact.setPhone(phone);

        PartyPhone partyPhone = new PartyPhone();
        int index = 1;
        String type = "MOBILE";

        YourClassName spyClass = spy(yourClass);
        doReturn("+962").when(spyClass).getDialCode("JO");
        mockStatic(HelperUtils.class);

        when(HelperUtils.checkTranslation(phoneCountry)).thenReturn("JO");
        when(HelperUtils.checkDescription(phoneCountry)).thenReturn("Jordan");

        // Act
        spyClass.setPhones(index, contact, partyPhone, type);

        // Assert
        assertEquals(type, partyPhone.getType());
        assertEquals("0791234567", partyPhone.getNumber());
        assertNotNull(partyPhone.getCountry());
        assertEquals("+962", partyPhone.getCountry().getDialcode());
        assertEquals("JO", partyPhone.getCountry().getCode());
        assertEquals("Jordan", partyPhone.getCountry().getDescription());
        assertEquals(index, partyPhone.getIndex());
    }

    @Test
    void testSetPhones_withNullPhoneNumber_shouldSkipDialCode() {
        // Arrange
        Contact contact = new Contact();
        PhoneCountry phoneCountry = new PhoneCountry();
        phoneCountry.setCode("JO");
        Phone phone = new Phone();
        phone.setNumber(null);
        phone.setCountry(phoneCountry);
        contact.setPhone(phone);

        PartyPhone partyPhone = new PartyPhone();

        YourClassName spyClass = spy(yourClass);
        mockStatic(HelperUtils.class);

        when(HelperUtils.checkTranslation(phoneCountry)).thenReturn("JO");
        when(HelperUtils.checkDescription(phoneCountry)).thenReturn("Jordan");

        // Act
        spyClass.setPhones(1, contact, partyPhone, "MOBILE");

        // Assert
        assertNull(partyPhone.getCountry().getDialcode());
        assertEquals("JO", partyPhone.getCountry().getCode());
        assertEquals("Jordan", partyPhone.getCountry().getDescription());
    }
