 @Test
    void addAbFullPartyDetails_success_whenIdentifierIsNull() throws Exception {
        PartyService spyService = spy(partyService);
        when(spyService.mapNewPartyModelToABCustomerRequestHeader(anyMap(), anyString()))
                .thenReturn(new ABCustomerRequestHeader());
        when(mdmApisClient.getGlobalId(anyString())).thenReturn("GLOBAL123");
        when(soapRequestService.getRiskRating(any(), anyMap())).thenReturn("RISK123");
        when(newPartyModelMapper.mapNewPartyModelToFixedLengthString(any(), any(), any(), any(), anyString()))
                .thenReturn("fixedString");

        BackendResponse backendResponse = new BackendResponse();
        backendResponse.setBackendCreateCustomerResponse(new BackendCreateCustomerResponse("CUSTOMER123"));
        when(mdmApisClient.callQueueIntegrationService(any(), anyString(), anyString()))
                .thenReturn(backendResponse);

        CustomerAbResponse response = spyService.addAbFullPartyDetails(newPartyModel, headers, "CORP123", null);

        assertThat(response).isNotNull();
        assertThat(response.getCustomerId()).isEqualTo("CUSTOMER123");
        assertThat(response.getGlobalId()).isEqualTo("GLOBAL123");
    }

    @Test
    void addAbFullPartyDetails_reopenCustomer_success() throws Exception {
        PartyService spyService = spy(partyService);

        newPartyModel.setReopenCustomer(true);
        headers.put("inputCountry", "US");

        Relationship relationship = new Relationship();
        relationship.setGlobalId("GLOBAL456");
        when(spyService.mapNewPartyModelToABCustomerRequestHeader(anyMap(), anyString()))
                .thenReturn(new ABCustomerRequestHeader());
        when(goldenRelationshipRepository.getCustomerByRelatedProductCountryRoleOrganizationAndIsDeleted(anyString(), anyString()))
                .thenReturn(relationship);
        when(soapRequestService.getRiskRating(any(), anyMap())).thenReturn("RISK456");
        when(newPartyModelMapper.mapNewPartyModelToFixedLengthString(any(), any(), any(), any(), anyString()))
                .thenReturn("fixedString");

        BackendResponse backendResponse = new BackendResponse();
        backendResponse.setBackendCreateCustomerResponse(new BackendCreateCustomerResponse("CUSTOMER456"));
        when(mdmApisClient.callQueueIntegrationService(any(), anyString(), anyString()))
                .thenReturn(backendResponse);

        CustomerAbResponse response = spyService.addAbFullPartyDetails(newPartyModel, headers, "CORP456", "IDENTIFIER");

        assertThat(response).isNotNull();
        assertThat(response.getCustomerId()).isEqualTo("CUSTOMER456");
        assertThat(response.getGlobalId()).isEqualTo("GLOBAL456");
    }

    @Test
    void addAbFullPartyDetails_identifierNotNullAndNotReopen_throwsBusinessWarningException() {
        newPartyModel.setReopenCustomer(false);

        assertThrows(BusinessWarningException.class,
                () -> partyService.addAbFullPartyDetails(newPartyModel, headers, "CORP123", "IDENTIFIER"));
    }

    @Test
    void addAbFullPartyDetails_reopenCustomerButNotFound_throwsValueNotFoundException() {
        newPartyModel.setReopenCustomer(true);
        headers.put("inputCountry", "US");

        when(goldenRelationshipRepository.getCustomerByRelatedProductCountryRoleOrganizationAndIsDeleted(anyString(), anyString()))
                .thenReturn(null);

        assertThrows(ValueNotFoundException.class,
                () -> partyService.addAbFullPartyDetails(newPartyModel, headers, "CORP123", "IDENTIFIER"));
    }

    @Test
    void addAbFullPartyDetails_backendResponseNull_throwsBadRequestException() throws Exception {
        PartyService spyService = spy(partyService);
        when(spyService.mapNewPartyModelToABCustomerRequestHeader(anyMap(), anyString()))
                .thenReturn(new ABCustomerRequestHeader());
        when(mdmApisClient.getGlobalId(anyString())).thenReturn("GLOBAL123");
        when(soapRequestService.getRiskRating(any(), anyMap())).thenReturn("RISK123");
        when(newPartyModelMapper.mapNewPartyModelToFixedLengthString(any(), any(), any(), any(), anyString()))
                .thenReturn("fixedString");

        BackendResponse backendResponse = new BackendResponse(); // null BackendCreateCustomerResponse
        when(mdmApisClient.callQueueIntegrationService(any(), anyString(), anyString()))
                .thenReturn(backendResponse);

        assertThrows(BadRequestException.class,
                () -> spyService.addAbFullPartyDetails(newPartyModel, headers, "CORP123", null));
    }
