@Test
void testGetRelationshipsByGlobalIdAndCustomerId_WhenRoleIsNull_ShouldCallAhRoleMethod() throws Exception {
    // Arrange
    String identifier = "C123";
    String inputCountry = "JO";
    String role = null;
    Relationship expectedRelationship = new Relationship();

    when(goldenRelationshipRepository
            .getGlobalIdByRelatedProductAndRelationCountryAndAhRole(identifier, inputCountry))
            .thenReturn(expectedRelationship);

    // Act
    Relationship result = partyService.getRelationshipsByGlobalIdAndCustomerId(identifier, inputCountry, role);

    // Assert
    assertNotNull(result);
    assertEquals(expectedRelationship, result);
    verify(goldenRelationshipRepository)
            .getGlobalIdByRelatedProductAndRelationCountryAndAhRole(identifier, inputCountry);
    verify(goldenRelationshipRepository, never())
            .getGlobalIdByRelatedProductAndRelationCountryAndRole(anyString(), anyString(), anyString());
}


@Test
void testGetRelationshipsByGlobalIdAndCustomerId_WhenRoleIsNotBlank_ShouldCallRoleMethod() throws Exception {
    // Arrange
    String identifier = "C123";
    String inputCountry = "JO";
    String role = "GUARDIAN";
    Relationship expectedRelationship = new Relationship();

    when(goldenRelationshipRepository
            .getGlobalIdByRelatedProductAndRelationCountryAndRole(identifier, inputCountry, role))
            .thenReturn(expectedRelationship);

    // Act
    Relationship result = partyService.getRelationshipsByGlobalIdAndCustomerId(identifier, inputCountry, role);

    // Assert
    assertNotNull(result);
    assertEquals(expectedRelationship, result);
    verify(goldenRelationshipRepository)
            .getGlobalIdByRelatedProductAndRelationCountryAndRole(identifier, inputCountry, role);
    verify(goldenRelationshipRepository, never())
            .getGlobalIdByRelatedProductAndRelationCountryAndAhRole(anyString(), anyString());
}
