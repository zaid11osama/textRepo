import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.List;
import java.util.Map;

@Component
public class Curl {
    private Curls curls;
    private Map<String, String> headers;

    // Getters and Setters
    public Curls getCurls() {
        return curls;
    }

    public void setCurls(Curls curls) {
        this.curls = curls;
    }

    public Map<String, String> getHeaders() {
        return headers;
    }

    public void setHeaders(Map<String, String> headers) {
        this.headers = headers;
    }

    public static class Curls {
        private List<String> get;
        private List<Request> post;
        private List<Request> put;
        private List<Request> delete;

        // Getters and Setters
        public List<String> getGet() {
            return get;
        }

        public void setGet(List<String> get) {
            this.get = get;
        }

        public List<Request> getPost() {
            return post;
        }

        public void setPost(List<Request> post) {
            this.post = post;
        }

        public List<Request> getPut() {
            return put;
        }

        public void setPut(List<Request> put) {
            this.put = put;
        }

        public List<Request> getDelete() {
            return delete;
        }

        public void setDelete(List<Request> delete) {
            this.delete = delete;
        }
    }

    public static class Request {
        private String url;
        private String body;

        // Getters and Setters
        public String getUrl() {
            return url;
        }

        public void setUrl(String url) {
            this.url = url;
        }

        public String getBody() {
            return body;
        }

        public void setBody(String body) {
            this.body = body;
        }
    }

    // Load JSON config from file
    public static Curl loadFromJson() {
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            return objectMapper.readValue(new ClassPathResource("config.json").getFile(), Curl.class);
        } catch (IOException e) {
            throw new RuntimeException("Failed to load JSON config", e);
        }
    }
}
