@Test
void testGetStatus_Success() throws Exception {
    // Arrange
    MdmLogCupTransaction transaction = new MdmLogCupTransaction();
    Optional<MdmLogCupTransaction> response = Optional.of(transaction);

    when(dbLogger.logIntoDb(any(), any(), any(), any())).thenReturn(logChannel);
    when(partyService.getTransactionStatus(anyString(), anyString(), any())).thenReturn(response);
    when(objectMapper.writeValueAsString(response)).thenReturn("{json}");

    // Act
    Optional<MdmLogCupTransaction> result = mainService.getStatus("cust123", "txn123", headers);

    // Assert
    assertThat(result).isPresent().contains(transaction);

    verify(dbLogger).updateLogChannelOutput(
            eq("{json}"),
            eq(HttpStatus.OK.name()),
            eq(HttpStatus.OK.value()),
            eq(logChannel)
    );
}

@Test
void testGetStatus_EmptyOptional_ThrowsNoContent() throws Exception {
    // Arrange
    Optional<MdmLogCupTransaction> response = Optional.empty();

    when(dbLogger.logIntoDb(any(), any(), any(), any())).thenReturn(logChannel);
    when(partyService.getTransactionStatus(anyString(), anyString(), any())).thenReturn(response);
    when(objectMapper.writeValueAsString(response)).thenReturn("[]");

    // Act & Assert
    ResponseStatusException ex = assertThrows(ResponseStatusException.class,
            () -> mainService.getStatus("cust123", "txn123", headers));

    assertThat(ex.getStatus()).isEqualTo(HttpStatus.NO_CONTENT);
    assertThat(ex.getReason()).isEqualTo("No content found for the given transaction.");

    verify(dbLogger).updateLogChannelOutput(
            eq("[]"),
            eq(HttpStatus.OK.name()),
            eq(HttpStatus.OK.value()),
            eq(logChannel)
    );
}

@Test
void testGetStatus_Exception() throws Exception {
    // Arrange
    when(dbLogger.logIntoDb(any(), any(), any(), any())).thenReturn(logChannel);
    when(partyService.getTransactionStatus(anyString(), anyString(), any()))
            .thenThrow(new RuntimeException("Status lookup failed"));

    // Act & Assert
    Exception ex = assertThrows(RuntimeException.class,
            () -> mainService.getStatus("cust123", "txn123", headers));

    assertThat(ex.getMessage()).isEqualTo("Status lookup failed");

    verify(dbLogger).updateLogChannelOutput(
            eq("Status lookup failed"),
            eq(HttpStatus.BAD_REQUEST.name()),
            eq(HttpStatus.BAD_REQUEST.value()),
            eq(logChannel)
    );
}
