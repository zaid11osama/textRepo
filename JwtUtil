 @Test
    void shouldReturnEmptyPartyComplianceDetailsWhenInputsAreNull() {
        // when
        PartyComplianceDetails result = YourMapperClass.mapToPartyComplianceDetails(null, null);

        // then
        assertNotNull(result);
        assertNull(result.get_riskRating());
        assertNull(result.getLastReviewDate());
        assertNull(result.getNextReviewDate());
        assertNull(result.getRatingFrequency());
        assertFalse(result.isGrcFlag());
        assertNull(result.get_dataStatus());
        assertNull(result.getGrcModificationDate());
        assertNull(result.get_residencyCountry());
        assertNull(result.get_residencyIndicator());
    }

    @Test
    void shouldMapComplianceDetailsAndComplianceBasicCorrectly() {
        // given ComplianceDetails
        com.arabbank.model.entity.golden.ComplianceDetails complianceDetails = new com.arabbank.model.entity.golden.ComplianceDetails();
        complianceDetails.setRiskRating("HIGH");
        complianceDetails.setLastReviewDate(LocalDate.of(2023, 1, 1));
        complianceDetails.setNextReviewDate(LocalDate.of(2023, 6, 1));
        complianceDetails.setRatingFrequency("Annual");
        complianceDetails.setGrcFlag(1);
        complianceDetails.setDataStatus("Active");
        complianceDetails.setGrcModifyDate(LocalDate.of(2023, 2, 1));

        // given ComplianceBasic
        ComplianceBasic complianceBasic = new ComplianceBasic();
        complianceBasic.setResidencyCountry("JO");
        complianceBasic.setResidencyIndicator("Resident");

        // when
        PartyComplianceDetails result = YourMapperClass.mapToPartyComplianceDetails(complianceDetails, complianceBasic);

        // then
        assertNotNull(result);

        // ComplianceDetails mapping
        assertEquals("HIGH", result.get_riskRating());
        assertEquals(LocalDate.of(2023, 1, 1), result.getLastReviewDate());
        assertEquals(LocalDate.of(2023, 6, 1), result.getNextReviewDate());
        assertEquals("Annual", result.getRatingFrequency());
        assertTrue(result.isGrcFlag());
        assertEquals("Active", result.get_dataStatus());
        assertEquals(LocalDate.of(2023, 2, 1), result.getGrcModificationDate());

        // ComplianceBasic mapping
        assertEquals("JO", result.get_residencyCountry());
        assertEquals("Resident", result.get_residencyIndicator());
    }

    @Test
    void shouldHandlePartialNullInputs() {
        // given only ComplianceDetails
        com.arabbank.model.entity.golden.ComplianceDetails complianceDetails = new com.arabbank.model.entity.golden.ComplianceDetails();
        complianceDetails.setRiskRating("LOW");

        // when
        PartyComplianceDetails result = YourMapperClass.mapToPartyComplianceDetails(complianceDetails, null);

        // then
        assertNotNull(result);
        assertEquals("LOW", result.get_riskRating());
        assertNull(result.get_residencyCountry());
        assertNull(result.get_residencyIndicator());
    }
