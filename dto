package com.example.connectToDatabase.repository;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class RelationshipDTO {

    private RoleDTO role;
    private OrganizationDTO organization;
    private RelationCountryDTO relationCountry;
    private int relationshipSequence;
    private String originalGlobalId;
    private String withGlobalId;
    private String withProduct;
    private String globalId;
    private String relatedProduct;
    private String requestedBy;
    private String reasons;
    private String loggedInUser;
    private String generatedUniqueReference;


    public static class RoleDTO {
        private String code;
        private String description;

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }

        public String getDescription() {
            return description;
        }

        public void setDescription(String description) {
            this.description = description;
        }
    }



    public static class OrganizationDTO {
        private String code;
        private String description;

        public String getDescription() {
            return description;
        }

        public void setDescription(String description) {
            this.description = description;
        }

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }
    }


    public static class RelationCountryDTO {
        private String code;
        private String description;

        public String getCode() {
            return code;
        }

        public void setCode(String code) {
            this.code = code;
        }

        public String getDescription() {
            return description;
        }

        public void setDescription(String description) {
            this.description = description;
        }
    }
}
// Task java.util.concurrent.CompletableFuture$AsyncSupply@5cc7e579 rejected from org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor$1@3c8a7e38[Running, pool size = 10, active threads = 10, queued tasks = 100, completed tasks = 0]
	at java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2082) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:841) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1377) ~[na:na]
	
