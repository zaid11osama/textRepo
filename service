@Async("taskExecutor")
public CompletableFuture<List<ResponseEntity<Object>>> callApi(int requestID, List<Curls.Curl> assignedCurls) {

    commonHeaders.set("transactionReference", UUID.randomUUID().toString());
    List<ResponseEntity<Object>> responses = new ArrayList<>();

    for (Curls.Curl curl : assignedCurls) {
        ResponseEntity<Object> response = null;
        try {
            HttpEntity<Object> entity;
            if (curl.getBody() != null) {
                entity = new HttpEntity<>(curl.getBody(), commonHeaders);
            } else {
                entity = new HttpEntity<>(commonHeaders);
            }

            response = restTemplate.exchange(curl.getUrl(), getHttpType(curl.getType()), entity, Object.class);
            responses.add(response);

            log.info("Request {} completed by {}", requestID, Thread.currentThread().getName());
        } catch (Exception e) {
            log.error("Request {} failed for url {} - {}", requestID, curl.getUrl(), e.getMessage());
        } finally {
            if (response != null) 
                saveResponseToFile(response.toString());
            else 
                saveResponseToFile("200 OK OK, []");
        }
    }
    return CompletableFuture.completedFuture(responses);
}
